# This is a basic workflow to help you get started with Actions

name: CI with Xray (cloud)

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "test"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v0.0.0
      - name: setup-chromedriver
        uses: nanasess/setup-chromedriver@v1.0.1
      - name: Run tests
        run: mvn -s $GITHUB_WORKSPACE/.github/workflows/maven-settings.xml clean compile test
        env:
          GH_USERNAME: ${{ secrets.GH_USERNAME }}
          GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
      - name: debug JUnit XML report
        #if: ${{ false }}
        run: cat reports/TEST-junit-jupiter.xml
      - name: "Import results to Xray (cloud) using maven plugin"
        if: ${{ false }}
        run: mvn -s $GITHUB_WORKSPACE/.github/workflows/maven-settings.xml app.getxray:xray-maven-plugin:import-results -Dxray.cloud=true -Dxray.clientId=${{ secrets.XRAYCLOUD_CLIENT_ID }} -Dxray.clientSecret=${{ secrets.XRAYCLOUD_CLIENT_SECRET }} 
        env:
          GH_USERNAME: ${{ secrets.GH_USERNAME }}
          GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
      - name: "Import results to Xray (cloud) using a GH action"
        if: ${{ false }}
        uses: mikepenz/xray-action@v2.3.0
        with:
           username: "${{ secrets.XRAYCLOUD_CLIENT_ID }}"
           password: "${{ secrets.XRAYCLOUD_CLIENT_SECRET }}"
           xrayCloud: "true"
           testFormat: "junit"
           testPaths: "**/reports/*.xml"
           testPlanKey: "${{ secrets.XRAYCLOUD_TEST_PLAN_KEY }}"
           projectKey: "${{ secrets.JIRACLOUD_PROJECT_KEY }}"
      - name: Authenticate with Xray
        run: |
            cat cloud_auth.json.sample  | sed s/CLIENT_ID/${{ secrets.XRAYCLOUD_CLIENT_ID }}/g | sed s/CLIENT_SECRET/${{ secrets.XRAYCLOUD_CLIENT_SECRET }}/g > cloud_auth.json
            echo token=$(curl -H "Content-Type: application/json" -X POST --data @"cloud_auth.json" ${{ secrets.XRAYCLOUD_BASE_URL }}/api/v1/authenticate| tr -d '"') >> $GITHUB_ENV
      - name: Import results to Xray (cloud)
        run: |
          curl -H "Content-Type: text/xml" -X POST -H "Authorization: Bearer ${{ env.token }}"  --data @"reports/TEST-junit-jupiter.xml" "${{ secrets.XRAYCLOUD_BASE_URL }}/api/v2/import/execution/junit?projectKey=${{ secrets.JIRACLOUD_PROJECT_KEY }}&testPlanKey=${{ secrets.XRAYCLOUD_TEST_PLAN_KEY }}"
